{"version":3,"sources":["BooksAPI.js","BookShelfChanger.js","Book.js","Books.js","BookShelf.js","ListBooks.js","SearchBooks.js","App.js","serviceWorker.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","console","log","headers","BookShelfChanger","props","state","bookShelf","book","shelf","handleChange","bind","event","this","setState","target","value","changeBookShelf","className","onChange","disabled","Component","Book","undefined","style","width","height","backgroundImage","imageLinks","smallThumbnail","title","authors","length","map","author","key","Books","books","index","BookShelf","name","shelfBooks","ListBooks","priorityIndex","currentlyReading","wantToRead","read","sort","a","b","arrangedBooks","Object","entries","_","groupBy","to","SearchBooks","handleClick","clearSearchBooks","searchTerm","toLowerCase","searchBooks","filteredBooks","onClick","type","placeholder","renderSearchedBooks","BooksApp","componentDidMount","getAllBooksFromAPI","onChangeBookShelf","fetch","id","method","body","JSON","stringify","then","res","json","BooksAPI","apiUpdateResponse","catch","err","error","prevState","myBooks","filter","concat","onSearchBooks","query","maxResults","data","apiSearchedBooks","Array","isArray","newItems","apiSearchedBook","myBook","onClearSearchBooks","apiAllBooksResponse","exact","path","render","myReadBooks","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7c03576.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token) {\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n  console.log(\"token:\" ,token)\r\n}\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n  .then(res => res.json())\r\n  .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookShelfChanger extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n    //console.log('BookShelfChanger:props', props)\r\n    this.state = {\r\n      bookShelf: this.props.book.shelf ? this.props.book.shelf : 'none',\r\n    };\r\n    this.handleChange = this.handleChange.bind (this);\r\n  }\r\n\r\n  handleChange (event) {\r\n    this.setState (\r\n      {\r\n        bookShelf: event.target.value,\r\n      },\r\n      function () {\r\n        this.props.changeBookShelf (this.props.book, this.state.bookShelf);\r\n      }\r\n    );\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select value={this.state.bookShelf} onChange={this.handleChange}>\r\n          <option value=\"move\" disabled=\"disabled\">Move to...</option>\r\n          <option\r\n            value=\"currentlyReading\"\r\n            disabled={this.state.bookShelf === 'currentlyReading' ? true : null}\r\n          >\r\n            Currently Reading\r\n          </option>\r\n          <option\r\n            value=\"wantToRead\"\r\n            disabled={this.state.bookShelf === 'wantToRead' ? true : null}\r\n          >\r\n            Want to Read\r\n          </option>\r\n          <option\r\n            value=\"read\"\r\n            disabled={this.state.bookShelf === 'read' ? true : null}\r\n          >\r\n            Read\r\n          </option>\r\n          <option\r\n            value=\"none\"\r\n            disabled={\r\n              !(this.state.bookShelf === 'currentlyReading' ||\r\n                this.state.bookShelf === 'wantToRead' ||\r\n                this.state.bookShelf === 'read')\r\n                ? true\r\n                : null\r\n            }\r\n          >\r\n            None\r\n          </option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookShelfChanger.propTypes = {\r\n  book: PropTypes.object,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookShelfChanger;\r\n","import React from 'react';\r\nimport BookShelfChanger from './BookShelfChanger';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Book (props) {\r\n  const {book, changeBookShelf} = props;\r\n\r\n  return book !== undefined\r\n    ? <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${(book.imageLinks && book.imageLinks.smallThumbnail) || '../public/book.jpg'})`,\r\n            }}\r\n          />\r\n          <BookShelfChanger book={book} changeBookShelf={changeBookShelf} />\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        {book.authors\r\n          ? book.authors.length > 1\r\n              ? book.authors.map (author => (\r\n                  <div key={author} className=\"book-authors\">{author}</div>\r\n                ))\r\n              : <div className=\"book-authors\">{book.authors}</div>\r\n          : <div className=\"book-authors\">Unknown</div>}\r\n\r\n      </div>\r\n    : <div />;\r\n}\r\n\r\nBook.propTypes = {\r\n  books: PropTypes.object,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport Book from './Book';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Books (props) {\r\n  const {books, changeBookShelf} = props;\r\n\r\n  return (\r\n    <ol className=\"books-grid\">\r\n      {books &&\r\n        books.map ((book, index) => (\r\n          <li key={index}>\r\n            <Book book={book} changeBookShelf={changeBookShelf} />\r\n          </li>\r\n        ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\nBooks.propTypes = {\r\n  books: PropTypes.array,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Books;\r\n","import React from 'react';\r\nimport Books from './Books';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction BookShelf (props) {\r\n  const {name, shelfBooks, changeBookShelf} = props;\r\n\r\n  function findCorrectShelfName (shelfName) {\r\n    if (name === 'currentlyReading') {\r\n      return 'Currently Reading';\r\n    } else if (name === 'wantToRead') {\r\n      return 'Want To Read';\r\n    } else if (name === 'read') {\r\n      return 'Read';\r\n    } else {\r\n      return name;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{findCorrectShelfName (name)}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <Books books={shelfBooks} changeBookShelf={changeBookShelf} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBookShelf.propTypes = {\r\n  name: PropTypes.string,\r\n  shelfBooks: PropTypes.array,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookShelf;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport BookShelf from './BookShelf';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ListBooks (props) {\r\n  const {books, changeBookShelf } = props;\r\n  // console.log(\"books:\",books)\r\n\r\n  var priorityIndex = {currentlyReading: 1, wantToRead: 2, read: 3 };\r\n  books.sort((a, b) =>  priorityIndex[a.shelf] - priorityIndex[b.shelf]);\r\n  // console.log(\"orderedBooks\", books);\r\n  const shelfBooks = Object.entries (_.groupBy (books, 'shelf'));\r\n\r\n  const arrangedBooks = shelfBooks.map (([shelf, shelfBooks]) => {\r\n    return (\r\n      <div key={shelf}>\r\n        <BookShelf\r\n          name={shelf}\r\n          shelfBooks={shelfBooks}\r\n          changeBookShelf={changeBookShelf}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>My Reads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          {arrangedBooks}\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nListBooks.propTypes = {\r\n  books: PropTypes.array,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListBooks;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Component} from 'react';\r\nimport Books from './Books';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBooks extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n    // console.log ('SearchBooks:props:', props);\r\n    this.state = {\r\n      searchTerm: '',\r\n    };\r\n    this.onChange = this.onChange.bind (this); // binding this because onChange is called in another scope\r\n  }\r\n\r\n  onChange (event) {\r\n    const value = event.target.value.toLowerCase ();\r\n    this.setState (\r\n      {\r\n        searchTerm: value,\r\n      },\r\n      function () {\r\n        if (value !== undefined && value.length > 0) {\r\n          this.props.searchBooks (value);\r\n        } else {\r\n          this.props.clearSearchBooks ();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  renderSearchedBooks () {\r\n    if (this.props.filteredBooks.length > 0) {\r\n      return (\r\n        <div className=\"search-books-results\">\r\n          <Books\r\n            books={this.props.filteredBooks}\r\n            changeBookShelf={this.props.changeBookShelf}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.searchTerm.length > 0) {\r\n      return (\r\n        <div className=\"search-books-results\">\r\n          <h4>No result found for: \"{this.state.searchTerm}\"</h4>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleClick = event => {\r\n      this.props.clearSearchBooks ();\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"close-search\"\r\n            onClick={this.handleClick.bind (this)}\r\n          >\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n              placeholder=\"Search by title or author\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.renderSearchedBooks ()}\r\n      </div>\r\n    );\r\n  } // end of render\r\n} // end of component\r\n\r\nSearchBooks.propTypes = {\r\n  myReadBooks: PropTypes.array,\r\n  changeBookShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React, {Component} from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\nimport ListBooks from './ListBooks';\r\nimport {Route} from 'react-router-dom';\r\nimport SearchBooks from './SearchBooks';\r\n\r\nclass BooksApp extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n    this.state = {\r\n      myBooks: [],\r\n      searchBooks: [],\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getAllBooksFromAPI ();\r\n  };\r\n\r\n  getAllBooksFromAPI () {\r\n    BooksAPI.getAll ()\r\n      .then (apiAllBooksResponse => {\r\n        this.setState ({\r\n          myBooks: apiAllBooksResponse,\r\n        });\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n        this.setState ({error: true});\r\n      });\r\n  }\r\n\r\n  onChangeBookShelf = (book, shelf) => {\r\n    BooksAPI.update (book, shelf)\r\n      .then (apiUpdateResponse => {\r\n        // console.log ('update:result:', apiUpdateResponse);\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n        this.setState ({error: true});\r\n      });\r\n\r\n    if (shelf === 'none') \r\n    {\r\n      this.setState(prevState => ({\r\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id)\r\n      }));\r\n    } \r\n    else \r\n    {\r\n     book.shelf = shelf;\r\n      this.setState(prevState => ({\r\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id).concat(book)\r\n      }));\r\n    }\r\n    // console.log ('onChangeBookShelf:this.state.myBooks', this.state.myBooks);\r\n  };\r\n\r\n  onSearchBooks = searchTerm => {\r\n    BooksAPI.search (searchTerm, 10)\r\n      .then (apiSearchedBooks => {\r\n        // console.log ('apiSearchedBooks', apiSearchedBooks);\r\n        if (Array.isArray (apiSearchedBooks)) {\r\n          // console.log ('search1');\r\n          let newItems = apiSearchedBooks.map (apiSearchedBook => {\r\n            this.state.myBooks.map (myBook => {\r\n              if (myBook.id === apiSearchedBook.id) {\r\n                apiSearchedBook.shelf = myBook.shelf;\r\n                // console.log ('apiSearchedBook.shelf', myBook.title + ' ' + apiSearchedBook.shelf);\r\n              }\r\n              return myBook;\r\n            });\r\n            return apiSearchedBook;\r\n          });\r\n          // console.log ('newItems:', newItems);\r\n          //this.setState ({filteredBooks: newItems});\r\n          this.setState ({\r\n            searchBooks: newItems,\r\n          });\r\n        } else {\r\n          // console.log ('search2');\r\n          this.setState ({\r\n            searchBooks: [],\r\n          });\r\n        }\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n        this.setState ({error: true});\r\n      });\r\n  };\r\n\r\n  onClearSearchBooks = () => {\r\n    this.setState ({searchBooks: []});\r\n  };\r\n\r\n  render () {\r\n    if (this.state.error) {\r\n      return <div>An error occured. Please, try again later.</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <ListBooks\r\n              books={this.state.myBooks}\r\n              changeBookShelf={this.onChangeBookShelf}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchBooks\r\n              filteredBooks={this.state.searchBooks}\r\n              myReadBooks={this.state.myBooks}\r\n              changeBookShelf={this.onChangeBookShelf}\r\n              searchBooks={this.onSearchBooks}\r\n              clearSearchBooks={this.onClearSearchBooks}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById ('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister ();\r\n"],"sourceRoot":""}